串行/并行/CMS/G1
1、串行： 
   单线程收集，简单高效，但是可能会产生较长的停顿（用户线程），实际生产环境能力有限。
2、并行：
   多线程收集，垃圾收集过程中停止所有用户线程，但是可以通过参数设置来控制垃圾回收停顿时间，
   可以实现以高吞吐量为目标（减少垃圾收集时间，让用户代码获得更长的运行时间）；
3、CMS
   并发收集，以获取最短回收停顿时间为目标，内存回收过程与用户线程一起并发执行，
   缺点：对CPU资源非常敏感（ 并发收集虽然不会暂停用户线程，但因为占用一部分CPU资源，还是会导致应用程序变慢，总吞吐量降低）、
         无法处理浮动垃圾（在并发清除时，用户线程新产生的垃圾）、
		 产生大量内存碎片；
4、G1：
   并行与并发（可以并行来缩短"Stop The World"停顿时间、也可以并发让垃圾收集与用户程序同时进行）；
   堆的内存布局变化（新生代和老年代不再是物理隔离，它们都是一部分Region的集合）；
   结合多种垃圾收集算法，空间整合，不产生碎片；
   可预测的停顿：低停顿的同时实现高吞吐量
   